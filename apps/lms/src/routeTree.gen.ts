/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'

// Create Virtual Routes

const SupportLazyImport = createFileRoute('/support')()
const IndexLazyImport = createFileRoute('/')()
const RegisterIndexLazyImport = createFileRoute('/register/')()
const ClassesIndexLazyImport = createFileRoute('/classes/')()
const AssignmentsIndexLazyImport = createFileRoute('/assignments/')()
const AnnouncementsIndexLazyImport = createFileRoute('/announcements/')()
const AnnouncementsAnnouncementCodeLazyImport = createFileRoute(
  '/announcements/$announcementCode',
)()
const ClassesClassCodeIndexLazyImport = createFileRoute(
  '/classes/$classCode/',
)()
const RegisterAcceptIdLazyImport = createFileRoute('/register/accept/$id')()
const ClassesClassCodeModulesIndexLazyImport = createFileRoute(
  '/classes/$classCode/modules/',
)()
const ClassesClassCodeGradebookIndexLazyImport = createFileRoute(
  '/classes/$classCode/gradebook/',
)()
const ClassesClassCodeCompletedModulesIndexLazyImport = createFileRoute(
  '/classes/$classCode/completed-modules/',
)()
const ClassesClassCodeCompletedLessonsIndexLazyImport = createFileRoute(
  '/classes/$classCode/completed-lessons/',
)()
const ClassesClassCodeAssignmentsIndexLazyImport = createFileRoute(
  '/classes/$classCode/assignments/',
)()
const ClassesClassCodeAnnouncementsIndexLazyImport = createFileRoute(
  '/classes/$classCode/announcements/',
)()
const ClassesClassCodeAssignmentsAssignmentCodeLazyImport = createFileRoute(
  '/classes/$classCode/assignments/$assignmentCode',
)()
const ClassesClassCodeAnnouncementsAnnouncementCodeLazyImport = createFileRoute(
  '/classes/$classCode/announcements/$announcementCode',
)()
const ClassesClassCodeModulesModuleCodeIndexLazyImport = createFileRoute(
  '/classes/$classCode/modules/$moduleCode/',
)()
const ClassesClassCodeModulesModuleCodeLessonsLessonCodeLazyImport =
  createFileRoute(
    '/classes/$classCode/modules/$moduleCode/lessons/$lessonCode',
  )()

// Create/Update Routes

const SupportLazyRoute = SupportLazyImport.update({
  path: '/support',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/support.lazy').then((d) => d.Route))

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const RegisterIndexLazyRoute = RegisterIndexLazyImport.update({
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/register/index.lazy').then((d) => d.Route),
)

const ClassesIndexLazyRoute = ClassesIndexLazyImport.update({
  path: '/classes/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/classes/index.lazy').then((d) => d.Route))

const AssignmentsIndexLazyRoute = AssignmentsIndexLazyImport.update({
  path: '/assignments/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/assignments/index.lazy').then((d) => d.Route),
)

const AnnouncementsIndexLazyRoute = AnnouncementsIndexLazyImport.update({
  path: '/announcements/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/announcements/index.lazy').then((d) => d.Route),
)

const AnnouncementsAnnouncementCodeLazyRoute =
  AnnouncementsAnnouncementCodeLazyImport.update({
    path: '/announcements/$announcementCode',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/announcements/$announcementCode.lazy').then(
      (d) => d.Route,
    ),
  )

const ClassesClassCodeIndexLazyRoute = ClassesClassCodeIndexLazyImport.update({
  path: '/classes/$classCode/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/classes/$classCode/index.lazy').then((d) => d.Route),
)

const RegisterAcceptIdLazyRoute = RegisterAcceptIdLazyImport.update({
  path: '/register/accept/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/register/accept.$id.lazy').then((d) => d.Route),
)

const ClassesClassCodeModulesIndexLazyRoute =
  ClassesClassCodeModulesIndexLazyImport.update({
    path: '/classes/$classCode/modules/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/classes/$classCode/modules/index.lazy').then(
      (d) => d.Route,
    ),
  )

const ClassesClassCodeGradebookIndexLazyRoute =
  ClassesClassCodeGradebookIndexLazyImport.update({
    path: '/classes/$classCode/gradebook/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/classes/$classCode/gradebook/index.lazy').then(
      (d) => d.Route,
    ),
  )

const ClassesClassCodeCompletedModulesIndexLazyRoute =
  ClassesClassCodeCompletedModulesIndexLazyImport.update({
    path: '/classes/$classCode/completed-modules/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/classes/$classCode/completed-modules/index.lazy').then(
      (d) => d.Route,
    ),
  )

const ClassesClassCodeCompletedLessonsIndexLazyRoute =
  ClassesClassCodeCompletedLessonsIndexLazyImport.update({
    path: '/classes/$classCode/completed-lessons/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/classes/$classCode/completed-lessons/index.lazy').then(
      (d) => d.Route,
    ),
  )

const ClassesClassCodeAssignmentsIndexLazyRoute =
  ClassesClassCodeAssignmentsIndexLazyImport.update({
    path: '/classes/$classCode/assignments/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/classes/$classCode/assignments/index.lazy').then(
      (d) => d.Route,
    ),
  )

const ClassesClassCodeAnnouncementsIndexLazyRoute =
  ClassesClassCodeAnnouncementsIndexLazyImport.update({
    path: '/classes/$classCode/announcements/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/classes/$classCode/announcements/index.lazy').then(
      (d) => d.Route,
    ),
  )

const ClassesClassCodeAssignmentsAssignmentCodeLazyRoute =
  ClassesClassCodeAssignmentsAssignmentCodeLazyImport.update({
    path: '/classes/$classCode/assignments/$assignmentCode',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/classes/$classCode/assignments/$assignmentCode.lazy').then(
      (d) => d.Route,
    ),
  )

const ClassesClassCodeAnnouncementsAnnouncementCodeLazyRoute =
  ClassesClassCodeAnnouncementsAnnouncementCodeLazyImport.update({
    path: '/classes/$classCode/announcements/$announcementCode',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/classes/$classCode/announcements/$announcementCode.lazy'
    ).then((d) => d.Route),
  )

const ClassesClassCodeModulesModuleCodeIndexLazyRoute =
  ClassesClassCodeModulesModuleCodeIndexLazyImport.update({
    path: '/classes/$classCode/modules/$moduleCode/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/classes/$classCode/modules/$moduleCode/index.lazy').then(
      (d) => d.Route,
    ),
  )

const ClassesClassCodeModulesModuleCodeLessonsLessonCodeLazyRoute =
  ClassesClassCodeModulesModuleCodeLessonsLessonCodeLazyImport.update({
    path: '/classes/$classCode/modules/$moduleCode/lessons/$lessonCode',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/classes/$classCode/modules/$moduleCode/lessons.$lessonCode.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/support': {
      id: '/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof SupportLazyImport
      parentRoute: typeof rootRoute
    }
    '/announcements/$announcementCode': {
      id: '/announcements/$announcementCode'
      path: '/announcements/$announcementCode'
      fullPath: '/announcements/$announcementCode'
      preLoaderRoute: typeof AnnouncementsAnnouncementCodeLazyImport
      parentRoute: typeof rootRoute
    }
    '/announcements/': {
      id: '/announcements/'
      path: '/announcements'
      fullPath: '/announcements'
      preLoaderRoute: typeof AnnouncementsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/assignments/': {
      id: '/assignments/'
      path: '/assignments'
      fullPath: '/assignments'
      preLoaderRoute: typeof AssignmentsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/': {
      id: '/classes/'
      path: '/classes'
      fullPath: '/classes'
      preLoaderRoute: typeof ClassesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/register/accept/$id': {
      id: '/register/accept/$id'
      path: '/register/accept/$id'
      fullPath: '/register/accept/$id'
      preLoaderRoute: typeof RegisterAcceptIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$classCode/': {
      id: '/classes/$classCode/'
      path: '/classes/$classCode'
      fullPath: '/classes/$classCode'
      preLoaderRoute: typeof ClassesClassCodeIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$classCode/announcements/$announcementCode': {
      id: '/classes/$classCode/announcements/$announcementCode'
      path: '/classes/$classCode/announcements/$announcementCode'
      fullPath: '/classes/$classCode/announcements/$announcementCode'
      preLoaderRoute: typeof ClassesClassCodeAnnouncementsAnnouncementCodeLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$classCode/assignments/$assignmentCode': {
      id: '/classes/$classCode/assignments/$assignmentCode'
      path: '/classes/$classCode/assignments/$assignmentCode'
      fullPath: '/classes/$classCode/assignments/$assignmentCode'
      preLoaderRoute: typeof ClassesClassCodeAssignmentsAssignmentCodeLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$classCode/announcements/': {
      id: '/classes/$classCode/announcements/'
      path: '/classes/$classCode/announcements'
      fullPath: '/classes/$classCode/announcements'
      preLoaderRoute: typeof ClassesClassCodeAnnouncementsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$classCode/assignments/': {
      id: '/classes/$classCode/assignments/'
      path: '/classes/$classCode/assignments'
      fullPath: '/classes/$classCode/assignments'
      preLoaderRoute: typeof ClassesClassCodeAssignmentsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$classCode/completed-lessons/': {
      id: '/classes/$classCode/completed-lessons/'
      path: '/classes/$classCode/completed-lessons'
      fullPath: '/classes/$classCode/completed-lessons'
      preLoaderRoute: typeof ClassesClassCodeCompletedLessonsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$classCode/completed-modules/': {
      id: '/classes/$classCode/completed-modules/'
      path: '/classes/$classCode/completed-modules'
      fullPath: '/classes/$classCode/completed-modules'
      preLoaderRoute: typeof ClassesClassCodeCompletedModulesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$classCode/gradebook/': {
      id: '/classes/$classCode/gradebook/'
      path: '/classes/$classCode/gradebook'
      fullPath: '/classes/$classCode/gradebook'
      preLoaderRoute: typeof ClassesClassCodeGradebookIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$classCode/modules/': {
      id: '/classes/$classCode/modules/'
      path: '/classes/$classCode/modules'
      fullPath: '/classes/$classCode/modules'
      preLoaderRoute: typeof ClassesClassCodeModulesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$classCode/modules/$moduleCode/': {
      id: '/classes/$classCode/modules/$moduleCode/'
      path: '/classes/$classCode/modules/$moduleCode'
      fullPath: '/classes/$classCode/modules/$moduleCode'
      preLoaderRoute: typeof ClassesClassCodeModulesModuleCodeIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$classCode/modules/$moduleCode/lessons/$lessonCode': {
      id: '/classes/$classCode/modules/$moduleCode/lessons/$lessonCode'
      path: '/classes/$classCode/modules/$moduleCode/lessons/$lessonCode'
      fullPath: '/classes/$classCode/modules/$moduleCode/lessons/$lessonCode'
      preLoaderRoute: typeof ClassesClassCodeModulesModuleCodeLessonsLessonCodeLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  LoginRoute,
  SupportLazyRoute,
  AnnouncementsAnnouncementCodeLazyRoute,
  AnnouncementsIndexLazyRoute,
  AssignmentsIndexLazyRoute,
  ClassesIndexLazyRoute,
  RegisterIndexLazyRoute,
  RegisterAcceptIdLazyRoute,
  ClassesClassCodeIndexLazyRoute,
  ClassesClassCodeAnnouncementsAnnouncementCodeLazyRoute,
  ClassesClassCodeAssignmentsAssignmentCodeLazyRoute,
  ClassesClassCodeAnnouncementsIndexLazyRoute,
  ClassesClassCodeAssignmentsIndexLazyRoute,
  ClassesClassCodeCompletedLessonsIndexLazyRoute,
  ClassesClassCodeCompletedModulesIndexLazyRoute,
  ClassesClassCodeGradebookIndexLazyRoute,
  ClassesClassCodeModulesIndexLazyRoute,
  ClassesClassCodeModulesModuleCodeIndexLazyRoute,
  ClassesClassCodeModulesModuleCodeLessonsLessonCodeLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/support",
        "/announcements/$announcementCode",
        "/announcements/",
        "/assignments/",
        "/classes/",
        "/register/",
        "/register/accept/$id",
        "/classes/$classCode/",
        "/classes/$classCode/announcements/$announcementCode",
        "/classes/$classCode/assignments/$assignmentCode",
        "/classes/$classCode/announcements/",
        "/classes/$classCode/assignments/",
        "/classes/$classCode/completed-lessons/",
        "/classes/$classCode/completed-modules/",
        "/classes/$classCode/gradebook/",
        "/classes/$classCode/modules/",
        "/classes/$classCode/modules/$moduleCode/",
        "/classes/$classCode/modules/$moduleCode/lessons/$lessonCode"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/support": {
      "filePath": "support.lazy.tsx"
    },
    "/announcements/$announcementCode": {
      "filePath": "announcements/$announcementCode.lazy.tsx"
    },
    "/announcements/": {
      "filePath": "announcements/index.lazy.tsx"
    },
    "/assignments/": {
      "filePath": "assignments/index.lazy.tsx"
    },
    "/classes/": {
      "filePath": "classes/index.lazy.tsx"
    },
    "/register/": {
      "filePath": "register/index.lazy.tsx"
    },
    "/register/accept/$id": {
      "filePath": "register/accept.$id.lazy.tsx"
    },
    "/classes/$classCode/": {
      "filePath": "classes/$classCode/index.lazy.tsx"
    },
    "/classes/$classCode/announcements/$announcementCode": {
      "filePath": "classes/$classCode/announcements/$announcementCode.lazy.tsx"
    },
    "/classes/$classCode/assignments/$assignmentCode": {
      "filePath": "classes/$classCode/assignments/$assignmentCode.lazy.tsx"
    },
    "/classes/$classCode/announcements/": {
      "filePath": "classes/$classCode/announcements/index.lazy.tsx"
    },
    "/classes/$classCode/assignments/": {
      "filePath": "classes/$classCode/assignments/index.lazy.tsx"
    },
    "/classes/$classCode/completed-lessons/": {
      "filePath": "classes/$classCode/completed-lessons/index.lazy.tsx"
    },
    "/classes/$classCode/completed-modules/": {
      "filePath": "classes/$classCode/completed-modules/index.lazy.tsx"
    },
    "/classes/$classCode/gradebook/": {
      "filePath": "classes/$classCode/gradebook/index.lazy.tsx"
    },
    "/classes/$classCode/modules/": {
      "filePath": "classes/$classCode/modules/index.lazy.tsx"
    },
    "/classes/$classCode/modules/$moduleCode/": {
      "filePath": "classes/$classCode/modules/$moduleCode/index.lazy.tsx"
    },
    "/classes/$classCode/modules/$moduleCode/lessons/$lessonCode": {
      "filePath": "classes/$classCode/modules/$moduleCode/lessons.$lessonCode.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
